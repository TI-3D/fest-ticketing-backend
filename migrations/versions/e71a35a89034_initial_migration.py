"""Initial migration

Revision ID: e71a35a89034
Revises: 
Create Date: 2024-11-07 15:08:14.503642

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
# revision identifiers, used by Alembic.
revision: str = 'e71a35a89034'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', type_=sa.Uuid(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=16), nullable=True),
    sa.Column('nik', sqlmodel.sql.sqltypes.AutoString(length=16), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', 'EO', name='role'), nullable=False),
    sa.Column('status', sa.Enum('BASIC', 'PREMIUM', name='userstatus'), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('profile_picture', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('providers',
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('user_id', type_=sa.Uuid(), nullable=False),
    sa.Column('provider_name', sa.Enum('EMAIL', 'GOOGLE', 'FACEBOOK', 'TWITTER', name='providername'), nullable=False),
    sa.Column('external_provider_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('provider_id')
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('providers')
    op.drop_table('users')
    op.execute("DROP TYPE IF EXISTS gender")
    op.execute("DROP TYPE IF EXISTS userstatus")
    op.execute("DROP TYPE IF EXISTS providername")
    op.execute("DROP TYPE IF EXISTS role")
    # ### end Alembic commands ###
